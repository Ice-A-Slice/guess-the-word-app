# Project: LLM-Enhanced Word Guessing Game - Phase 1

## 1. Goal

Enhance the existing word guessing game by integrating an LLM (OpenAI GPT-4o) to provide word descriptions in multiple languages, starting with English and Swedish.

## 2. Core Features (Phase 1)

*   **LLM Integration:** Integrate the OpenAI API (using the GPT-4o model).
*   **Word Source:** Continue using a predefined list of English words as the target words to be guessed.
*   **Description Generation & Translation:** Implement logic to:
    *   Select an English word from the list.
    *   Call the OpenAI API with a prompt requesting a description for that specific English word, explicitly asking for the description to be generated *in the user's selected language* (initially English or Swedish).
*   **Description Language Selection:** Add a UI element (e.g., dropdown, buttons) allowing the user to choose the language for the word's description (English or Swedish).
*   **Core Gameplay:** The user guesses the original English word based on the potentially translated description. The guessing and validation logic remains targeted at the English word.

## 3. Non-Goals (Phase 1)

*   Generating the guessable words themselves via LLM.
*   Allowing the user to *answer* in a language other than English.
*   Implementing a hint system using the LLM.
*   User accounts, scoring persistence, or saving game state.
*   Advanced caching mechanisms for descriptions (simple API calls for each round are acceptable for this phase).

## 4. Technical Considerations

*   **API Key Management:** Implement a secure method to store and access the OpenAI API key (e.g., environment variables).
*   **API Call Structure:** Design a reliable prompt for GPT-4o. The prompt must clearly specify the English word and the target language for the description.
*   **Error Handling:** Implement robust error handling for API calls (e.g., network errors, API errors, invalid responses). Provide a fallback or user notification if a description cannot be generated.
*   **UI/UX:** Design and implement the user interface element for selecting the description language.
*   **State Management:** Update the application's state to manage the selected description language and the potentially translated description.

## 5. Success Metrics

*   The user can select either English or Swedish from the UI for the description language.
*   When Swedish is selected, descriptions generated by the OpenAI API in Swedish are displayed for the current English word.
*   When English is selected, descriptions generated in English are displayed.
*   The core game functionality (guessing the English word, checking the answer, revealing the word) remains operational regardless of the selected description language.
*   API errors are handled gracefully without crashing the application.

